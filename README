This directory contains a plugin package that allows SpecTcl to read and
write radware spectra. It contains the following modules from radware,
written by David Radford at Oak Ridge National Laboratories and redistributed
by permission:

caskyn.c       matinv.c   readsp.c  util.c
cask.c         getchar_vms.c         matread.c  
rwspec.c       util.h

Only 1-d spectra are supported, therefore this package is not added as an extension
to the swrite/sread format list.

  To incorporate the package from the SpecTcl command prompt or in a script:

load $SpecTclHome/lib/libradwareio.so

This adds the following two commands:

rwwrite spectrum filename


Where spectrum is a SpecTcl spectrum name and filename is the name of the
file to create.  If an extension is not provided, .spe is added. filename 
without the extension becomes the radware name of the spectrum.

On success rwrite returns nothing on error, a Tcl error is declared and
an error message is set as the command result.

Example:

rwwrite my.long.named.spectrum somefile

(note the radware spectrum names written into the spe file are the first 8 chars
of the output filename or just the base part of the file if it is less than 8 chars).


rwread ?-maxchans n? filename 

If necessary, .spe will be added to filename to give it an extension.
Reads a spectrum from a radware .spe file.  The resulting spectrum
will:
- Be a 1-d snapshot spectrum (that is it will never increment).
- Have a name of the form spname?_n?
  where: spname is the name of the spectrum in the .spe file.
  and _n is an optional suffix consisting of an underscore and a number
  that forces the spectrum to be unique.

On success,the name of the spectrum is returned
On error, a Tcl error is declared and a descriptive error message is returned.

If -maxchans is supplied, n is the maximum number of channels you will accept.
This defaults to 8192 which should usually be enough.

Example:

sbind [rwread myfile.spe]



See INSTALL for installation instructions.
For installation issues, post at http://daqbugs.nscl.msu.edu

