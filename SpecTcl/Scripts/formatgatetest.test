#  Test FormatGate:

#
#  Be sure the test package is loaded.
#

if {[lsearch [namespace children] ::tcltest] == -1} {
    package   require tcltest
    namespace import  ::tcltest::*
}

source fileall.tcl

# 1.x: Tests for compound gates.  
#  These should give me a gate command of the form
#    handle "gate name type {gatelist}"
#

test formatgate-1.1 {Format and gate} { 
    global Gates
    
    set Gates(test) {ok {{test} * {{a b} b c}}}

    FormatGate test

} {handle "gate {test} * {{a\ b} {b} {c} }"}

test formatgate-1.2 {Format + gate} {
    global Gates
    set name "Test gate"
    set Gates($name) {ok {{Test gate} + {a {b c} d}}}

    FormatGate "Test gate"
} {handle "gate {Test\ gate} + {{a} {b\ c} {d} }"}


test formatgate-1.3 {format - gate} {
    global Gates
    set name "Test Gate"
    
    set Gates($name) {ok {{Test Gate} - {{a b c}}}}

    FormatGate "Test Gate"
} {handle "gate {Test\ Gate} - {{a\ b\ c} }"}

test formatgate-1.4 {format T gate} {
    global Gates
    set name "True Gate"
    set Gates($name) {ok {{True Gate} T {}}}

    FormatGate $name
} {handle "gate {True\ Gate} T {}"}


test formatgate-1.5 {forrmat F gate} {
    global Gates
    set name "False Gate"

    set Gates($name) {ok {{False Gate} F {}}}

    FormatGate $name
} {handle "gate {False\ Gate} F {}"}

test formatgate-1.6 {format c2band gate} {
    global Gates

    set name {[Contour]$bands}

    set Gates($name) {ok {{[Contour]$bands} c2band {a b}}}

    FormatGate $name
} {handle "gate {\[Contour\]\$bands} c2band {{a} {b} }"}


#  2.x Tests for Two d gates (contours & bands)

test formatgate-2.1 {format contour} {
    global Gates

    set Gates(test)  {ok {test c {{a b} {1 1} {30 30} {1 30}}}}

    FormatGate test

} {handle "gate {test} c {{a} {b} {{1 1} {30 30} {1 30} }}"}


test formatgate-2.2 {format band} {
    global Gates
    set Gates(test) {ok {test b {{c d} {1 1} {30 30} {100 25}}}}

    FormatGate test
} {handle "gate {test} b {{c} {d} {{1 1} {30 30} {100 25} }}"}

# 3.x Tests for gamma 2 d gates (gb, gc)

test formatgate-3.1 {format gamma band} {
    global Gates

    set Gates(test) {ok {test gb {{{1 1} {30 30} {100 25}} spectrum}}}

    FormatGate test

} {handle "gate {test} gb {{{1 1} {30 30} {100 25} } {spectrum}}"}

test formatgate-3.2 {format gamma contour} {
    global Gates

    set Gates(test) {ok {test gc {{{1 1} {30 30} {100 25}} spectrum}}}

    FormatGate test
} {handle "gate {test} gc {{{1 1} {30 30} {100 25} } {spectrum}}"}

# 4.x Tests for gamma 1d gates (gs)

test formatgate-4.1 {format gamma slice} {
    global Gates

    set Gates(test) {ok {test gs {{100 200} a}}}

    FormatGate test
} {handle "gate {test} gs {{ 100 200} {a}}"}

# 5.x Tests for slice (s) gate.

test formatgate-5.1 {Format slice gate} {
    global Gates

    set Gates(test) {ok {test s {a {100 200}}}}

    FormatGate test
} {handle "gate {test} s {{a} {100 200}}"}

array unset Gates

::tcltest::cleanupTests