Content-type: text/html

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML><HEAD><TITLE>Man page of Tracing TCL Variables in C++</TITLE>
</HEAD><BODY>
<H1>Tracing TCL Variables in C++</H1>
Section: NSCL Data analysis package (3)<BR>Updated: 0.1<BR><A HREF="#index">Index</A>
<A HREF="/cgi-bin/man/man2html">Return to Main Contents</A><HR>


<BR>



<PRE>
<BR>
<HR></PRE>



<A NAME="lbAB">&nbsp;</A>
<H2>NAME</H2>

Tracing Intro - Introduction to tracing TCL Variables in C++.
<A NAME="lbAC">&nbsp;</A>
<H2>SYNOPSIS</H2>


<DL COMPACT><DT><DD>
<PRE>

CTracedVariable         - A traced TCL Variable class.
CVariableTraceCallback  - A callback class base class for tracing.
CLanguageTraceCallback  - A callback that relays to unbound functions.

</PRE>

</DL>

<P>

<A NAME="lbAD">&nbsp;</A>
<H2>DESCRIPTION</H2>

<P>

TCL supports planting traces on variables.  A trace results in an invocation of
a function whenever certain actions are performed on the specific variable.
The actions that can be monitored include:
<DL COMPACT>
<DT>- Read access<DD>
If a traced variable has a read trace installed, any time the value of the
variable is evaluated, the corresponding trace is invoked.  Samples access
include:

<DL COMPACT><DT><DD>
<PRE>

     set var                 ;# var is evaluated, trace invoked.
     set a [expr $var * 2]   ;# var is evaluated, trace invoked.

     CTCLVariable var(pInterp,&quot;var&quot;, kfFALSE);
     var.Get();             // Any traces set are invoked.

</PRE>

</DL>

<P>

<DT>- Write access<DD>
If a variable has a write trace installed, any time the value of the
variable is modified, write traces are invoked.  For example:

<DL COMPACT><DT><DD>
<PRE>

     incr var                ;# var is modified, write traces invoked.
     set var 5               ;# Var is modified, write traces invoked.

     CTCLVariable var(pInterp, &quot;var&quot;, kfFALSE);
     var.Set(&quot;Abcde&quot;);       // Var modified, write traces invoked.

</PRE>

</DL>

<P>

<DT>- Unset<DD>
If a variable has an unset trace installed, it will be invoked when the
variable is destroyed.  This will happen as well, if the interpreter itself is
begin destroyed, for example:

<DL COMPACT><DT><DD>
<PRE>

     unset var              ;# unset traces on var destroyed.

     Tcl_DeleteInterp(pInterp); ;# Unset traces get called.

</PRE>

</DL>

<P>

</DL>
<P>

<BR>&nbsp;Tracing&nbsp;in&nbsp;the&nbsp;TCL++&nbsp;library&nbsp;is&nbsp;accomplished&nbsp;by&nbsp;overriding&nbsp;the&nbsp;CTCLVariable
class, supplying behavior for the function call operator (operator()), and
turning on tracing.  This is simplified through the introduction of a  set of
related classes:
<DL COMPACT>
<DT>CTracedVariable<DD>
This class is derived from CTCLVariable.  At construction time, it accepts a
callback parameter and trace flags. The callback parameter is an object derived
from type CVariableTraceCallback.   When the trace fires the CTracedVariable
class delegates the traceback functionality to the operator() of the callback
object. 
<DT>CVariableTraceCallback<DD>
This class is an abstract base class that defines the interface for trace
callback objects.  To use tracing, you will need to derive a class from
CVariableCallback, supplying behavior for the operator() member function.  You
then create a CTracedVariable and, pass an object of your callback type as the
callback parameter to the CTracedVariable's constructor.
<DT>CLanguageTraceCallback<DD>
Often, it is not necessary to have the full context of an object to execute a
traceback. The CLanguageTraceCallback is a pre-built trace callback object
that delegates the trace to an ``unbound'' function.  Unbound functions are C++
terminology for functions that are not part of a class.  This object can also
be used to delegate trace callbacks to functions not written in C++.
</DL>
<A NAME="lbAE">&nbsp;</A>
<H2>SEE ALSO</H2>

<A HREF="/cgi-bin/man/man2html?3+CTCLTracedVariable">CTCLTracedVariable</A>(3), <A HREF="/cgi-bin/man/man2html?3+CVariableTraceCallback">CVariableTraceCallback</A>(3), <A HREF="/cgi-bin/man/man2html?3+CLanguageTraceCallback">CLanguageTraceCallback</A>(3)

<HR>
<A NAME="index">&nbsp;</A><H2>Index</H2>
<DL>
<DT><A HREF="#lbAB">NAME</A><DD>
<DT><A HREF="#lbAC">SYNOPSIS</A><DD>
<DT><A HREF="#lbAD">DESCRIPTION</A><DD>
<DT><A HREF="#lbAE">SEE ALSO</A><DD>
</DL>
<HR>
This document was created by
<A HREF="/cgi-bin/man/man2html">man2html</A>,
using the manual pages.<BR>
Time: 14:18:39 GMT, February 25, 2005
</BODY>
</HTML>
