name: Build (and packaging)

on:
  workflow_call:
    inputs:
      os-version:
        required: true
        type: string
      packaging:
        required: true
        type: boolean
      dist-packaging:
        default: false
        type: boolean

jobs:
  build-and-packaging:
    name: Build (and packaging)
    runs-on: ubuntu-latest
    container:
      image: fribdaq/frib-${{ inputs.os-version }}-ci
      options: --cpus 2
    steps:
      - uses: actions/checkout@v3
      - name: autoreconf
        working-directory: ./main
        run: autoreconf -if
      - name: Configure libtcl++
        env:
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
        working-directory: ./main
        shell: bash
        run: |
          git config --global --add safe.directory '*'
          eval `ssh-agent -s`
          
          echo "${{ secrets.LIBTCLPLUS }}" | ssh-add -
          ./tcl++incorp
          ssh-add -D
          
          eval `ssh-agent -k`
      - name: Incorporate unified format
        env:
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
        working-directory: ./main
        shell: bash
        run: |
          git config --global --add safe.directory '*'
          eval `ssh-agent -s`
          
          echo "${{ secrets.UNIFIEDFMT }}" | ssh-add -
          ./unifiedfmt-incorp.sh
          ssh-add -D
          
          eval `ssh-agent -k`
      - name: Incorporate CutiePie
        env:
	   GIT_SSH_COMMAND: "ssh -o StrictHostKeyCheckint=no"
	shell: bash
	run: |
	     git config --global --add safe.directory '*'
	     eval `ssh agent -s`
	     if test -e qtpi-incorp.sh ; then /qtpi-incorp.sh  v1.0; fi
      - name: Creating build directory
        run: mkdir main/oot
      - name: Configuring
        working-directory: ./main/oot
        shell: bash
        run: |
          source `cat /usr/opt/ROOT_PATH`/bin/thisroot.sh
          ../configure --prefix=/usr/opt/spectcl/$GITHUB_REF_NAME
      - name: Make
        working-directory: ./main/oot
        run: make -j2 clean && make -j2 all && make -j2 install
      - name: Packaging for complete source distribution
        if: ${{ inputs.packaging == true && inputs.dist-packaging == true }}
        working-directory: ./main/oot
        run: |
          cd ../libtcl
          make clean
          cd ../unifiedformat
          rm -rf build
          cd ../oot
          make -j2 dist
          mv spectcl-${{ github.ref_name }}.tar.gz spectcl-${{ github.ref_name }}-dist.tar.gz
      - name: Upload complete source distribution package
        if: ${{ inputs.packaging == true && inputs.dist-packaging == true }}
        uses: actions/upload-artifact@v3
        with:
          name: Complete source distribution
          path: ./main/oot/spectcl-${{ github.ref_name }}-dist.tar.gz
      - name: Packaging for binary distribution
        if: ${{ inputs.packaging == true }}
        working-directory: /usr/opt/spectcl
        run: tar -czf spectcl-$GITHUB_REF_NAME-${{ inputs.os-version }}.tar.gz $GITHUB_REF_NAME
      - name: Upload binary distribution package
        if: ${{ inputs.packaging == true }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.os-version }} binary distribution
          path: /usr/opt/spectcl/spectcl-${{ github.ref_name }}-${{ inputs.os-version }}.tar.gz
