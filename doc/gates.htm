<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>Gates in SpecTcl</title>
</head>

<body>

<table border="0" cellpadding="0" cellspacing="0" width="100%">
  <tr>
    <th width="9%" nowrap><a href="http://www.nscl.msu.edu"><img src="nscl_logo_small.gif" alt="nscl_logo_small.gif (2463 bytes)" width="63" height="52"></a></th>
    <td width="79%">
      <h1>Gates in SpecTcl</h1>
    </td>
    <td width="12%"><a href="index.htm"><img src="HH00706_.jpg" alt="HH00706_.jpg (6530 bytes)" width="192" height="84"></a></td>
  </tr>
</table>
<p>Gates allow you to set conditions on the increment of a spectrum.&nbsp;
SpecTcl understands several primitive and complex gates.&nbsp; See the <a href="Commands/gate.htm">gate,</a>
and <a href="Commands/apply.htm">apply</a> commands</p>
<p>Primitive gates are created either with the gate command or by clicking them
into Xamine and accepting them.&nbsp; The gate name supplied to Xamine will be
the gate name used by SpecTcl.&nbsp; It is best to avoid names with spaces, and
characters which Tcl understands (e.g. $, &quot;, [, ], (,), {, }).&nbsp; While
primitive gates are clicked in on a spectrum, they wind up defined on <i><a href="parameters.htm">parameter(s)</a>.&nbsp;</i>
SpecTcl will tell all appropriate spectra to display a gate. The primitive gates
are:</p>
<ul>
  <li>Slice: A lower threshold and upper cutoff.&nbsp; Accepted in Xamine as a
    Cut gate, on a 1d spectrum.&nbsp; The gate is set on the underlying
    parameter of the spectrum, and is stored in parameter coordinates.</li>
  <li>Band: An open polyline.&nbsp; Points under the polyline are considered
    inside the band.&nbsp; Accepted in Xamine as a Band gate (when a 2d spectrum
    is selected).&nbsp; The gate is defined on the pair of parameters which make
    up the spectrum, and is stored in parameter coordinates.</li>
  <li>Contour: A polygon. Points inside the polygon (defined by the &quot;odd
    crossing rule&quot;) are considered inside the band.&nbsp; The gate is
    accepted in Xamine as a Contour gate on a 2d spectrum.&nbsp; The gate is
    defined on the pair of parameters which make up the spectrum and is stored
    in parameter coordinates.</li>
  <li>1dGamma:&nbsp; Accepted as&nbsp; a Cut gate on a 1d gamma spectrum.&nbsp;
    The gate is stored independent of a set of parameters.&nbsp; 1dGamma gates
    only make sense when applied on 1d Gamma spectra:
    <ul>
      <li>If on a 1d, all other parameters increment for each parameter inside
        the gate.</li>
      <li>IF on a 2d, Each parameter pair for which one of the parameters is not
        in the gate is incremented..</li>
    </ul>
  </li>
  <li>2d: Accepted as a Contour gate on a 2d gamma spectrum. The gate is stored
    independent of a set of parameters.&nbsp; 2d gamma gates only make sense
    when applied to 2d gamma spectra:&nbsp; Each pair inside the gate is removed
    from the parameter list of the spectrum.&nbsp; The remaining parameters are
    used to increment the spectrum as usual.</li>
</ul>
<p>Complex gates allow you to build up logical combinations of conditions from
simpler gates (primitive or other complex gates).&nbsp; The complex gates
defined are:</p>
<ul>
  <li>TRUE - always true</li>
  <li>FALSE - always false</li>
  <li>NOT - True if the single dependent gate is false.</li>
  <li>AND - True if all dependent gates are true.</li>
  <li>OR - True if any dependent gate is true.</li>
</ul>
<p>&nbsp;</p>
<hr>
<p>Last Modified: <!--webbot bot="Timestamp" s-type="EDITED"
s-format="%B %d, %Y" startspan -->October 28, 2003<!--webbot bot="Timestamp" endspan i-checksum="30351" -->
 by: <a href="mailto:fox@nscl.msu.edu">fox@nscl.msu.edu</a><br>
<font size="2">© Copyright NSCL 1999, All rights reserved</font></p>

</body>

</html>
