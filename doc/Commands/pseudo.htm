<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>SpecTcl Home page</title>
</head>

<body>

<table border="0" cellpadding="0" cellspacing="0" width="100%">
  <tr>
    <th width="9%" nowrap><a href="http://www.nscl.msu.edu"><img src="../images/nscl_logo_small.gif" alt="nscl_logo_small.gif (2463 bytes)" width="63" height="52"></a></th>
    <td width="79%">
      <h1>Pseudo command</h1>
    </td>
    <td width="12%"><a href="../index.htm"><img src="../images/HH00706_.jpg" alt="HH00706_.jpg (6530 bytes)" width="192" height="84"></a></td>
  </tr>
</table>
<h2><a name="Top">Syntax</a></h2>
<pre><a href="#Add">pseudo <i>name</i> <i>parameters</i> <i>body</i></a><i>
</i><a href="#List">pseudo -list [<i>name1 ...</i>]</a>
<a href="#summing">pseudo -delete <i>name1</i> [<i>name2... </i>]</a></pre>
<h2>Synopsis</h2>
<p>The pseudo command allows you to create, list and delete dynamically computed
pseudo parameters.</p>
<h2>Detailed Description</h2>
<p>Using the pseudo command you can</p>
<ul>
  <li>Define a computation which will produce a parameter value as a function of
    existing parameters and Tcl variables.</li>
  <li>List the set of pseudo parameters and their definitions sorted by pseudo
    parameter name.</li>
  <li>Delete a set of previously defined pseudo parameters.</li>
</ul>
<p>Pseudo parameters are parameters which are computed online as a function of
existing parameters in the event (pseudo or raw).&nbsp; See also:</p>
<ul>
  <li><a href="parameter.htm">parameter</a> - Define a SpecTcl parameter</li>
  <li><a href="spectrum.htm">spectrum</a>&nbsp; - Define a spectrum histogrammed
    by SpecTcl</li>
</ul>
<p><a href="#Top">Top</a></p>
<h3><a name="Add">pseudo <i>name parameters body</i></a></h3>
<p>Defines the computation which produces the value of a pseudo parameter.&nbsp;
Pseudo parameter definition is a two step process. First a SpecTcl parameter is
defined using the <i><a href="parameter.htm">parameter</a></i> command.&nbsp;
Next the pseudo command is used to define how that parameter is produced.</p>
<p>The <i>name </i>argument is the name of the parameter which will be
computed.&nbsp; It should be the same as the name of the parameter created in
the <i>parameter </i>command.&nbsp; The <i>parameters</i> is a Tcl formatted
list of existing SpecTcl parameters on which the computation depends.&nbsp;
These parameters can be raw parameters or pseudo parameters for which the pseudo
script has already been defined. <i>Body</i> is a Tcl script body which computes
the pseudo.&nbsp; The script body will be converted into a procedure body with
the dependent parameters as its parameter list.</p>
<h4><a name="summing">example:&nbsp; Summing two parameters:</a></h4>
<p>Suppose the parameters par1 and par2 exist with resolution 10 bits.&nbsp; The
following sequence will define a pseudo called sum which will compute the sum of
these two parameters:</p>
<pre>parameter sum 1234 11     ;# Sum is Id 1234 11bits
pseudo sum { par1 par2 } {
   return [expr $par1 + $par2]
}</pre>
<pre>&nbsp;</pre>
<p><a href="#Top">Top</a></p>
<h4>How pseudo parameters work</h4>
<p>An understanding of how pseudo parameters are implemented may be useful for
pseudo writers.&nbsp;&nbsp; The pseudo definition is converted into a procedure
as follows:</p>
<pre>proc <i>name</i>_Procedure parameters body</pre>
<p>For each event, a call to this procedure is built with the appropriate
parameters provided from the event.&nbsp; The return value of the procedure is
placed in the parameter corresponding to the pseudo.&nbsp; The procedure is
saved as compiled byte code so that it can be efficiently called again and
again.</p>
<p><a href="#Top">Top</a></p>
<h3><a name="List">pseudo -list [<i>name1 ... </i>]</a></h3>
<p>Lists pseudo parameters and their definitions.&nbsp; Note that if parameter
names are provided only those parameters named are listed.&nbsp; If names are
not provided, all pseudo parameters are listed.&nbsp; Each parameter is
described by a Tcl list.&nbsp; The list contains:</p>
<ul>
  <li>Parameter name</li>
  <li>Dependent parameters</li>
  <li>Script body.</li>
</ul>
<p>In the <a href="#summing">example above</a> the sum parameter will be listed
as follows:</p>
<pre>{sum {par1 par2} { return [expr $par1 + $par2] }}</pre>
<p><a href="#Top">Top</a></p>
<h3>pseudo -delete <i>name1</i> [<i>name2... </i>]</h3>
<p>Deletes one or more pseudo definitions.&nbsp; Note that the parameter
definition is not deleted.&nbsp; Only the script which produces it. Several
pseudo scripts can be deleted in a single command.</p>
<p><a href="#Top">Top</a></p>
<hr>
<p>Last Modified: <!--webbot bot="Timestamp" s-type="EDITED"
s-format="%B %d, %Y" startspan -->October 28, 2003<!--webbot bot="Timestamp" endspan i-checksum="30351" -->
 by: <a href="mailto:fox@nscl.msu.edu">fox@nscl.msu.edu</a><br>
<font size="2">© Copyright NSCL 1999, All rights reserved</font></p>

</body>

</html>
