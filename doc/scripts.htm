<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>Scripts and SpecTcl</title>
</head>

<body>

<table border="0" cellpadding="0" cellspacing="0" width="100%">
  <tr>
    <th width="9%" nowrap><a href="http://www.nscl.msu.edu"><img src="images/nscl_logo_small.gif" alt="nscl_logo_small.gif (2463 bytes)" width="63" height="52"></a></th>
    <td width="79%">
      <h1>Scripts and SpecTcl</h1>
    </td>
    <td width="12%"><a href="index.htm"><img src="images/HH00706_.jpg" alt="HH00706_.jpg (6530 bytes)" width="192" height="84"></a></td>
  </tr>
</table>
<p>SpecTcl is built around the Tcl/Tk scripting language.&nbsp; Scripting
languages allow you to automate and extend the functionality of an interactive
program without modifying the program itself.&nbsp; They provide a command
language interface to the program which itself is a programming language.&nbsp;
This facility makes it easy to do things with SpecTcl which are hard or in any
event tedious with other analysis software.&nbsp; The Tk component of SpecTcl
allows a user tailorable graphical user interface to be layered on top of
SpecTcl.</p>
<p>For example:</p>
<ul>
  <li>One experimentalist at the NSCL produced SpecTcl scripts which control a
    detector holder and the data acquisition system.&nbsp; Packaged together he
    produced an automated detector testing system (contact <a href="mailto:wallace@nscl.msu.edu">Mark
    Wallace</a> for more information).</li>
  <li>Another experimentalist at the NSCL has produced GUI's which allow you to
    graphically specify spectra.&nbsp; (contact <a href="mailto:bazin@nscl.msu.edu">Daniel
    Bazin</a> for more information about this).</li>
</ul>
<p>As a simple inline example.&nbsp; Suppose you have to specify a segmented
detector and its spectra.&nbsp; With an unscripted system you might have had to
do something like:</p>
<pre>parameter seg1e 1 10
parameter seg2e 2 10
...
parameter seg100e 100 10
spectrum  seg1e 1 seg1e 10
...
spectrum  seg100e 1 seg100e 10</pre>
<p>With SpecTcl scripting you can concisely write this as follows:</p>
<pre>for {set segno 1} {$segno &lt;= 100} {incr segno} {
   set    name seg
   append name $segno e
   parameter $name $segno 10
   spectrum  $name 1 $name 10
}</pre>
<p>And let the execution of this script define the 100 parameters and spectra
for you.</p>
<p>In other data analysis software you might have to recompile the analysis
software to add an ad hoc computed parameter.&nbsp; With SpecTcl, you can
actually script a pseudo parameter using the <i><a href="Commands/pseudo.htm">pseudo</a></i>
command, dynamically adding an event by event computation to the running
program.</p>
<p>Future planned enhancements to SpecTcl will allow you to specify scripts
which run:</p>
<ul>
  <li>Prior to analyzing the first data buffer of a new run.</li>
  <li>After analyzing the last data buffer of a run.</li>
  <li>Prior to opening a new data source.</li>
  <li>Prior to closing an open data source.</li>
</ul>
<p>These scriptable actions will allow you to build scripts to completely
automate production mode histogramming.<br>
</p>
<p>&nbsp;</p>
<hr>
<p>Last Modified: <!--webbot bot="Timestamp" s-type="EDITED"
s-format="%B %d, %Y" startspan -->September 06, 2001<!--webbot bot="Timestamp" endspan i-checksum="37985" -->
 by: <a href="mailto:fox@nscl.msu.edu">fox@nscl.msu.edu</a><br>
<font size="2">© Copyright NSCL 1999, All rights reserved</font></p>

</body>

</html>
