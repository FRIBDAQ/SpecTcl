# Makefile.in generated automatically by automake 1.4-p4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/sh

srcdir = .
top_srcdir = ..

prefix = /home/fox/spectest
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/SpecTcl
pkglibdir = $(libdir)/SpecTcl
pkgincludedir = $(includedir)/SpecTcl

top_builddir = ..

ACLOCAL = aclocal
AUTOCONF = autoconf
AUTOMAKE = automake
AUTOHEADER = autoheader

INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL} $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_SCRIPT = ${INSTALL}
transform = s,x,x,

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = 
host_triplet = i686-pc-linux-gnu
AS = @AS@
AWK = mawk
CC = gcc
CFLAGS = -g -O2
CPP = gcc -E
CXX = g++
DLLTOOL = @DLLTOOL@
ECHO = echo
EXEEXT = 
F77 = g77
LD_EXTRA_FLAGS = 
LEX = flex
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = makeinfo
MOTIF_INCLUDES =  -I/usr/X11R6/include
MOTIF_LIBSW = 
OBJDUMP = @OBJDUMP@
OBJEXT = o
PACKAGE = SpecTcl
RANLIB = ranlib
STRIP = strip
TCL_FLAGS = -I/usr/include/tcl
TCL_LDFLAGS = -L/usr/lib -ltk -ltcl
VERSION = 2.1-pre
WCHAR_T_DEF = 
XINCLUDES = -I/usr/X11R6/include
XLIBSW = -L/usr/X11R6/lib
XTLIBSW = 
YACC = bison -y
ac_aux_dir = config
gri_cmd_dir = /home/fox/spectest/share/gri
gri_dir = /home/fox/spectest/bin
have_convert = yes

HOMEDEF = -DHOME='"$(prefix)"'
GRIFLAGS = -DGRI_DIR='"/home/fox/spectest/bin"' -DGRI_CMD_DIR='"/home/fox/spectest/share/gri"'
LEXOUT = lex.yy.c
MOTIF_SOURCES = XMCallback.cc XMMenus.cc XMDialogs.cc XMWidget.cc 	XMPushbutton.cc XMManagers.cc XMText.cc


INCLUDES = -I/usr/X11R6/include  -I/usr/X11R6/include $(HOMEDEF) $(GRIFLAGS)
LDFLAGS = -L/usr/X11R6/lib   
XCCFLAGS = -c -w -I. -I.. $(INCLUDES) -DXTFUNCPROTO -DXAMINE

bin_PROGRAMS = Xamine colorset

check_PROGRAMS = Xaminetest
TESTS = $(check_PROGRAMS)

include_HEADERS = Tab.h allocator.h dispshare.h    helpmenu.h    refreshctl.h TabP.h          axes.h             dispwind.h      info.h        scaling.h XBatch.h        buttondlg.h        errormsg.h      integrate.h   select2.h XMCallback.h    buttonreq.h        eventflags.h    lblfont.h     spccheck.h XMDialogs.h     buttonsetup.h      exit.h          location.h    spcchoice.h XMLabel.h       chanplot.h         expand.h        logging.h     spcdisplay.h XMList.h        checklist.h        gateio.h        mapcoord.h    specchoose.h XMManagers.h    client.h           gc.h            marker.h      sumregion.h XMMenus.h       clientgates.h      gcmgr.h         menusetup.h   superpos.h XMPushbutton.h  clientops.h        geometrymenu.h  messages.h    superprompt.h XMScale.h       clirequests.h      grafinput.h     objcopy.h     text.h XMSeparators.h  colormgr.h         griprint.h      optionmenu.h  titles.h XMShell.h       compatspec.h       grobfile.tab.h  panemgr.h     toggles.h XMTab.h         convert.h          grobfile_lex.h  pkgmgr.h      trackcursor.h XMText.h        copier.h           grobjdisplay.h  prccheck.h   windfile_lex.h XMWidget.h      copyatr.h          grobjinput.h    printer.h    windfile_tab.h XMWlist.h       defaultfile_lex.h  grobjio.h       procede.h     windio.h Xamine.h        delgrob.h          grobjiomenu.h   properties.h  windlex.h acceptgates.h   dfltmgr.h          grobjmgr.h      ptlist.h      winiomenu.h advprompt.h     dispgrob.h         guintegrate.h   queue.h       xaminegc.h


lib_LTLIBRARIES = libXamine.la

libXamine_la_SOURCES = client.c clientgates.c prccheck.c allocator.c specalloc.c clientbuttons.c


Xamine_SOURCES = Xamine.cc XMWidget.cc XMCallback.cc XMMenus.cc XMText.cc XMDialogs.cc XMManagers.cc XMWlist.cc XMShell.cc XMPushbutton.cc XMTab.cc windfile_parse.cc windfile_lex.cc XMLabel.cc XMList.cc XMScale.cc XMSeparators.cc dispwind.cc menusetup.cc exit.cc helpmenu.cc winiomenu.cc grobjiomenu.cc geometrymenu.cc errormsg.cc logging.cc toggles.cc spectra.cc specchoose.cc spcdisplay.cc advprompt.cc properties.cc panemgr.cc buttonsetup.cc pkgmgr.cc dfltmgr.cc axisdefault.cc titledefault.cc attribdefault.cc reducedefault.cc rend1default.cc rend2default.cc printer.cc refreshctl.cc axes.cc scaling.cc text.cc titles.cc chanplot.cc plot1d.cc  plot2d.cc colormgr.cc shared.cc location.cc convert.cc trackcursor.cc expand.cc select2.cc info.cc dispgrob.cc grobfile_lex.cc grobfile_parse.cc grobjdb.cc grobfile.cc refreshdefault.cc defaultfile_parse.cc marker.cc grafinput.cc grobjinput.cc grobjmgr.cc grobjdisplay.cc sumregion.cc integrate.cc guintegrate.cc delgrob.cc messages.cc eventflags.cc gateio.cc acceptgates.cc clirequests.cc prccheck.c spccheck.cc superpos.cc superprompt.cc objcopy.cc copier.cc lblfont.cc checklist.cc compatspec.cc copyatr.cc defaultfile_lex.cc buttonreq.cc buttondlg.cc spcchoice.cc spccompatchoice.cc spclimchoice.cc ptlist.cc lexsupport.c gc.cc xaminegc.cc gcmgr.cc Tab.c griprint.cc mapcoord.cc


colorset_SOURCES = colorset.cc $(MOTIF_SOURCES) errormsg.cc helpmenu.cc procede.cc colormgr.cc


Xaminetest_SOURCES = Xaminetest.c

EXTRA_Xamine_SOURCES = defaultfile.y grobfile.y windfile.y defaultfile.l grobfile.l windfile.l


Xamine_LDADD = -lXm -lXt -lX11 -lm -lfl

colorset_LDADD = -lXm -lXt -lX11 -lfl

Xaminetest_LDADD = -lXamine -lm

Xaminetest_LDFLAGS = -L.

Xamine_DEPENDENCIES = windfile_parse.o windfile_lex.o dispwind.o 	defaultfile_lex.o menusetup.o exit.o helpmenu.o winiomenu.o 	grobjiomenu.o geometrymenu.o 	errormsg.o procede.o logging.o toggles.o specchoose.o spectra.o 	spcdisplay.o advprompt.o properties.o buttonsetup.o panemgr.o 	pkgmgr.o dfltmgr.o axisdefault.o titledefault.o attribdefault.o 	reducedefault.o rend1default.o rend2default.o printer.o refreshctl.o 	axes.o scaling.o text.o titles.o chanplot.o plot1d.o plot2d.o 	colormgr.o shared.o location.o convert.o trackcursor.o expand.o 	select2.o info.o refreshdefault.o defaultfile_parse.o marker.o 	grafinput.o grobjinput.o grobjmgr.o grobjdisplay.o  sumregion.o 	integrate.o guintegrate.o delgrob.o messages.o eventflags.o 	gateio.o acceptgates.o clirequests.o spccheck.o prccheck.o superpos.o 	superprompt.o objcopy.o lblfont.o checklist.o compatspec.o copyatr.o 	buttonreq.o buttondlg.o spcchoice.o spccompatchoice.o spclimchoice.o 	ptlist.o lexsupport.o xaminegc.o gcmgr.o copier.o gc.o Tab.o 	griprint.o mapcoord.o dispgrob.o grobfile_lex.o grobfile_parse.o 	grobjdb.o grobfile.o XMCallback.o XMMenus.o XMDialogs.o XMManagers.o 	XMWlist.o XMShell.o XMTab.o XMText.o colorset colorset.ico libXamine.la


Xaminetest_DEPENDENCIES = libXamine.la

EXTRA_DIST = queue.cc colorset.ico Xamine-X.3.release_notes Xamine-X.4.release_notes Xamine-X.6.release_notes Xamine-X.7.feature_list Xamine.ico Xamine.doc Xamine2.ctbl Xamine3.ctbl Xamine4.ctbl Xamine5.ctbl Xamine6.ctbl Xaminedemo.doc aedpublic.for aedshare.f aedshare.for aedxamine.for build.com dflt.tpu grobj.tpu win.tpu
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
LTLIBRARIES =  $(lib_LTLIBRARIES)


DEFS = -DHAVE_CONFIG_H -I. -I$(srcdir) -I..
CPPFLAGS = 
LIBS = -lm -lm -lm 
libXamine_la_LDFLAGS = 
libXamine_la_LIBADD = 
libXamine_la_OBJECTS =  client.lo clientgates.lo prccheck.lo \
allocator.lo specalloc.lo clientbuttons.lo
bin_PROGRAMS =  Xamine$(EXEEXT) colorset$(EXEEXT)
check_PROGRAMS =  Xaminetest$(EXEEXT)
PROGRAMS =  $(bin_PROGRAMS)

Xamine_OBJECTS =  Xamine.$(OBJEXT) XMWidget.$(OBJEXT) \
XMCallback.$(OBJEXT) XMMenus.$(OBJEXT) XMText.$(OBJEXT) \
XMDialogs.$(OBJEXT) XMManagers.$(OBJEXT) XMWlist.$(OBJEXT) \
XMShell.$(OBJEXT) XMPushbutton.$(OBJEXT) XMTab.$(OBJEXT) \
windfile_parse.$(OBJEXT) windfile_lex.$(OBJEXT) XMLabel.$(OBJEXT) \
XMList.$(OBJEXT) XMScale.$(OBJEXT) XMSeparators.$(OBJEXT) \
dispwind.$(OBJEXT) menusetup.$(OBJEXT) exit.$(OBJEXT) \
helpmenu.$(OBJEXT) winiomenu.$(OBJEXT) grobjiomenu.$(OBJEXT) \
geometrymenu.$(OBJEXT) errormsg.$(OBJEXT) logging.$(OBJEXT) \
toggles.$(OBJEXT) spectra.$(OBJEXT) specchoose.$(OBJEXT) \
spcdisplay.$(OBJEXT) advprompt.$(OBJEXT) properties.$(OBJEXT) \
panemgr.$(OBJEXT) buttonsetup.$(OBJEXT) pkgmgr.$(OBJEXT) \
dfltmgr.$(OBJEXT) axisdefault.$(OBJEXT) titledefault.$(OBJEXT) \
attribdefault.$(OBJEXT) reducedefault.$(OBJEXT) rend1default.$(OBJEXT) \
rend2default.$(OBJEXT) printer.$(OBJEXT) refreshctl.$(OBJEXT) \
axes.$(OBJEXT) scaling.$(OBJEXT) text.$(OBJEXT) titles.$(OBJEXT) \
chanplot.$(OBJEXT) plot1d.$(OBJEXT) plot2d.$(OBJEXT) colormgr.$(OBJEXT) \
shared.$(OBJEXT) location.$(OBJEXT) convert.$(OBJEXT) \
trackcursor.$(OBJEXT) expand.$(OBJEXT) select2.$(OBJEXT) info.$(OBJEXT) \
dispgrob.$(OBJEXT) grobfile_lex.$(OBJEXT) grobfile_parse.$(OBJEXT) \
grobjdb.$(OBJEXT) grobfile.$(OBJEXT) refreshdefault.$(OBJEXT) \
defaultfile_parse.$(OBJEXT) marker.$(OBJEXT) grafinput.$(OBJEXT) \
grobjinput.$(OBJEXT) grobjmgr.$(OBJEXT) grobjdisplay.$(OBJEXT) \
sumregion.$(OBJEXT) integrate.$(OBJEXT) guintegrate.$(OBJEXT) \
delgrob.$(OBJEXT) messages.$(OBJEXT) eventflags.$(OBJEXT) \
gateio.$(OBJEXT) acceptgates.$(OBJEXT) clirequests.$(OBJEXT) \
prccheck.$(OBJEXT) spccheck.$(OBJEXT) superpos.$(OBJEXT) \
superprompt.$(OBJEXT) objcopy.$(OBJEXT) copier.$(OBJEXT) \
lblfont.$(OBJEXT) checklist.$(OBJEXT) compatspec.$(OBJEXT) \
copyatr.$(OBJEXT) defaultfile_lex.$(OBJEXT) buttonreq.$(OBJEXT) \
buttondlg.$(OBJEXT) spcchoice.$(OBJEXT) spccompatchoice.$(OBJEXT) \
spclimchoice.$(OBJEXT) ptlist.$(OBJEXT) lexsupport.$(OBJEXT) \
gc.$(OBJEXT) xaminegc.$(OBJEXT) gcmgr.$(OBJEXT) Tab.$(OBJEXT) \
griprint.$(OBJEXT) mapcoord.$(OBJEXT)
Xamine_LDFLAGS = 
colorset_OBJECTS =  colorset.$(OBJEXT) XMCallback.$(OBJEXT) \
XMMenus.$(OBJEXT) XMDialogs.$(OBJEXT) XMWidget.$(OBJEXT) \
XMPushbutton.$(OBJEXT) XMManagers.$(OBJEXT) XMText.$(OBJEXT) \
errormsg.$(OBJEXT) helpmenu.$(OBJEXT) procede.$(OBJEXT) \
colormgr.$(OBJEXT)
colorset_DEPENDENCIES = 
colorset_LDFLAGS = 
Xaminetest_OBJECTS =  Xaminetest.$(OBJEXT)
CXXFLAGS = -g -O2
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
LEX_OUTPUT_ROOT = lex.yy
LEXLIB = -lfl
YLWRAP = $(top_srcdir)/config/ylwrap
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
HEADERS =  $(include_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in defaultfile.c grobfile.c \
windfile.c


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
DEP_FILES =  .deps/Tab.P .deps/XMCallback.P .deps/XMDialogs.P \
.deps/XMLabel.P .deps/XMList.P .deps/XMManagers.P .deps/XMMenus.P \
.deps/XMPushbutton.P .deps/XMScale.P .deps/XMSeparators.P \
.deps/XMShell.P .deps/XMTab.P .deps/XMText.P .deps/XMWidget.P \
.deps/XMWlist.P .deps/Xamine.P .deps/Xaminetest.P .deps/acceptgates.P \
.deps/advprompt.P .deps/allocator.P .deps/attribdefault.P .deps/axes.P \
.deps/axisdefault.P .deps/buttondlg.P .deps/buttonreq.P \
.deps/buttonsetup.P .deps/chanplot.P .deps/checklist.P .deps/client.P \
.deps/clientbuttons.P .deps/clientgates.P .deps/clirequests.P \
.deps/colormgr.P .deps/colorset.P .deps/compatspec.P .deps/convert.P \
.deps/copier.P .deps/copyatr.P .deps/defaultfile.P \
.deps/defaultfile_lex.P .deps/defaultfile_parse.P .deps/delgrob.P \
.deps/dfltmgr.P .deps/dispgrob.P .deps/dispwind.P .deps/errormsg.P \
.deps/eventflags.P .deps/exit.P .deps/expand.P .deps/gateio.P \
.deps/gc.P .deps/gcmgr.P .deps/geometrymenu.P .deps/grafinput.P \
.deps/griprint.P .deps/grobfile.P .deps/grobfile_lex.P \
.deps/grobfile_parse.P .deps/grobjdb.P .deps/grobjdisplay.P \
.deps/grobjinput.P .deps/grobjiomenu.P .deps/grobjmgr.P \
.deps/guintegrate.P .deps/helpmenu.P .deps/info.P .deps/integrate.P \
.deps/lblfont.P .deps/lexsupport.P .deps/location.P .deps/logging.P \
.deps/mapcoord.P .deps/marker.P .deps/menusetup.P .deps/messages.P \
.deps/objcopy.P .deps/panemgr.P .deps/pkgmgr.P .deps/plot1d.P \
.deps/plot2d.P .deps/prccheck.P .deps/printer.P .deps/procede.P \
.deps/properties.P .deps/ptlist.P .deps/reducedefault.P \
.deps/refreshctl.P .deps/refreshdefault.P .deps/rend1default.P \
.deps/rend2default.P .deps/scaling.P .deps/select2.P .deps/shared.P \
.deps/spccheck.P .deps/spcchoice.P .deps/spccompatchoice.P \
.deps/spcdisplay.P .deps/spclimchoice.P .deps/specalloc.P \
.deps/specchoose.P .deps/spectra.P .deps/sumregion.P .deps/superpos.P \
.deps/superprompt.P .deps/text.P .deps/titledefault.P .deps/titles.P \
.deps/toggles.P .deps/trackcursor.P .deps/windfile.P \
.deps/windfile_lex.P .deps/windfile_parse.P .deps/winiomenu.P \
.deps/xaminegc.P
SOURCES = $(libXamine_la_SOURCES) $(Xamine_SOURCES) $(EXTRA_Xamine_SOURCES) $(colorset_SOURCES) $(Xaminetest_SOURCES)
OBJECTS = $(libXamine_la_OBJECTS) $(Xamine_OBJECTS) $(colorset_OBJECTS) $(Xaminetest_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cc .l .lo .o .obj .s .y
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu Display/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libXamine.la: $(libXamine_la_OBJECTS) $(libXamine_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libXamine_la_LDFLAGS) $(libXamine_la_OBJECTS) $(libXamine_la_LIBADD) $(LIBS)

mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

mostlyclean-checkPROGRAMS:

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

distclean-checkPROGRAMS:

maintainer-clean-checkPROGRAMS:

Xamine$(EXEEXT): $(Xamine_OBJECTS) $(Xamine_DEPENDENCIES)
	@rm -f Xamine$(EXEEXT)
	$(CXXLINK) $(Xamine_LDFLAGS) $(Xamine_OBJECTS) $(Xamine_LDADD) $(LIBS)

colorset$(EXEEXT): $(colorset_OBJECTS) $(colorset_DEPENDENCIES)
	@rm -f colorset$(EXEEXT)
	$(CXXLINK) $(colorset_LDFLAGS) $(colorset_OBJECTS) $(colorset_LDADD) $(LIBS)

Xaminetest$(EXEEXT): $(Xaminetest_OBJECTS) $(Xaminetest_DEPENDENCIES)
	@rm -f Xaminetest$(EXEEXT)
	$(LINK) $(Xaminetest_LDFLAGS) $(Xaminetest_OBJECTS) $(Xaminetest_LDADD) $(LIBS)
.cc.o:
	$(CXXCOMPILE) -c $<
.cc.obj:
	$(CXXCOMPILE) -c `cygpath -w $<`
.cc.lo:
	$(LTCXXCOMPILE) -c $<
.l.c:
	$(SHELL) $(YLWRAP) "$(LEX)" $< $(LEX_OUTPUT_ROOT).c $@ -- $(AM_LFLAGS) $(LFLAGS)
.y.c:
	$(SHELL) $(YLWRAP) "$(YACC)" $< y.tab.c $*.c y.tab.h $*.h -- $(AM_YFLAGS) $(YFLAGS)
defaultfile.h: defaultfile.c
grobfile.h: grobfile.c
windfile.h: windfile.c


install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(includedir)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(includedir)/$$p"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(includedir)/$$p; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	list='$(include_HEADERS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(includedir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = Display

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu Display/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:
	-rm -rf .deps

maintainer-clean-depend:

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp

%.o: %.cc
	@echo '$(CXXCOMPILE) -c $<'; \
	$(CXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.cc
	@echo '$(LTCXXCOMPILE) -c $<'; \
	$(LTCXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp
check-TESTS: $(TESTS)
	@failed=0; all=0; \
	srcdir=$(srcdir); export srcdir; \
	for tst in $(TESTS); do \
	  if test -f $$tst; then dir=.; \
	  else dir="$(srcdir)"; fi; \
	  if $(TESTS_ENVIRONMENT) $$dir/$$tst; then \
	    all=`expr $$all + 1`; \
	    echo "PASS: $$tst"; \
	  elif test $$? -ne 77; then \
	    all=`expr $$all + 1`; \
	    failed=`expr $$failed + 1`; \
	    echo "FAIL: $$tst"; \
	  fi; \
	done; \
	if test "$$failed" -eq 0; then \
	  banner="All $$all tests passed"; \
	else \
	  banner="$$failed of $$all tests failed"; \
	fi; \
	dashes=`echo "$$banner" | sed s/./=/g`; \
	echo "$$dashes"; \
	echo "$$banner"; \
	echo "$$dashes"; \
	test "$$failed" -eq 0
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLTLIBRARIES install-binPROGRAMS \
		install-exec-local
install-exec: install-exec-am

install-data-am: install-includeHEADERS
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLTLIBRARIES uninstall-binPROGRAMS \
		uninstall-includeHEADERS
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(bindir) \
		$(DESTDIR)$(includedir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "defaultfilelgrobfilelwindfileldefaultfilehdefaultfilecgrobfilehgrobfilecwindfilehwindfilec" || rm -f defaultfilel grobfilel windfilel defaultfileh defaultfilec grobfileh grobfilec windfileh windfilec
mostlyclean-am:  mostlyclean-libLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-binPROGRAMS \
		mostlyclean-checkPROGRAMS mostlyclean-tags \
		mostlyclean-depend mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-libLTLIBRARIES clean-compile clean-libtool \
		clean-binPROGRAMS clean-checkPROGRAMS clean-tags \
		clean-depend clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-libLTLIBRARIES distclean-compile \
		distclean-libtool distclean-binPROGRAMS \
		distclean-checkPROGRAMS distclean-tags distclean-depend \
		distclean-generic clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-binPROGRAMS \
		maintainer-clean-checkPROGRAMS maintainer-clean-tags \
		maintainer-clean-depend maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile \
mostlyclean-libtool distclean-libtool clean-libtool \
maintainer-clean-libtool mostlyclean-binPROGRAMS distclean-binPROGRAMS \
clean-binPROGRAMS maintainer-clean-binPROGRAMS uninstall-binPROGRAMS \
install-binPROGRAMS mostlyclean-checkPROGRAMS distclean-checkPROGRAMS \
clean-checkPROGRAMS maintainer-clean-checkPROGRAMS \
uninstall-includeHEADERS install-includeHEADERS tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir \
mostlyclean-depend distclean-depend clean-depend \
maintainer-clean-depend check-TESTS info-am info dvi-am dvi check \
check-am installcheck-am installcheck install-exec-local \
install-exec-am install-exec install-data-am install-data install-am \
install uninstall-am uninstall all-redirect all-am all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


install-exec-local:
	$(mkinstalldirs) $(prefix)/Etc
	$(INSTALL_PROGRAM) $(srcdir)/*.ctbl $(prefix)/Etc
	$(INSTALL_PROGRAM) $(srcdir)/*.ico  $(prefix)/Etc

$(LEXOUT):
	$(LEX) windfile.l

windfile_lex.cc: $(LEXOUT)
	sed s/yy/windfile/g $(LEXOUT) >windfile_lex.cc
	cp windfile_lex.h windlex.h

windfile_parse.cc: windfile.y windio.h dispwind.h dispshare.h printer.h
	$(YACC) -p windfile -b windfile windfile.y
	mv windfile.tab.c windfile_parse.cc

windfile_parse.o: windfile_parse.cc windfile.y  dispwind.h superpos.h dispshare.h windio.h
	$(CC) $(XCCFLAGS) windfile_parse.cc

defaultfile_parse.cc: defaultfile.y dispwind.h windio.h dispshare.h dfltmgr.h grobjdisplay.h panemgr.h printer.h
	$(YACC) -p defaultfile -b defaultfile defaultfile.y
	mv defaultfile.tab.c defaultfile_parse.cc

defaultfile_parse.o: defaultfile_parse.cc defaultfile.y dispwind.h superpos.h dispshare.h dfltmgr.h windio.h
	$(CC) $(XCCFLAGS) defaultfile_parse.cc

windfile_lex.h: windfile.y windio.h
	$(YACC) -p windfile -b windfile -dl  windfile.y
	mv windfile.tab.h windfile_lex.h

windfile_lex.o: windfile.l dispwind.h superpos.h windfile_lex.h windio.h
	$(LEX) windfile.l
	sed s/yy/windfile/g $(LEXOUT) >windfile_lex.cc
	cp windfile_lex.h windlex.h
	$(CC) $(XCCFLAGS) windfile_lex.cc

grobfile_lex.o: grobfile.l dispgrob.h grobjio.h grobfile_lex.h 
	$(LEX) grobfile.l
	sed s/yy/grobjfile/g $(LEXOUT) >grobfile_lex.cc
	$(CC) $(XCCFLAGS) grobfile_lex.cc

grobfile_parse.cc: grobfile.y dispgrob.h grobjio.h
	$(YACC) -p grobjfile -b grobfile grobfile.y
	mv grobfile.tab.c grobfile_parse.cc

grobfile_parse.o: grobfile_parse.cc
	$(CC) $(XCCFLAGS) grobfile_parse.cc

grobfile_lex.h: grobfile.y grobjio.h grobfile_parse.cc
	$(YACC) -p grobjfile -d grobfile.y
	mv y.tab.h grobfile_lex.h
	rm -f y.tab.c

grobfile.o: grobfile.cc dispgrob.h grobjio.h panemgr.h errormsg.h
	$(CC) $(XCCFLAGS) grobfile.cc

defaultfile_lex.h: defaultfile.y windio.h
	$(YACC) -p defaultfile -b defaultfile -dl defaultfile.y
	mv defaultfile.tab.h defaultfile_lex.h

defaultfile_lex.o: windfile.l defaultfile.l dispwind.h superpos.h \
	defaultfile_lex.h windio.h
	$(LEX) windfile.l
	$(LEX) defaultfile.l
	sed s/yy/defaultfile/g $(LEXOUT) >defaultfile_lex.cc
	cp defaultfile_lex.h windlex.h
	$(CC) $(XCCFLAGS) -DDEFAULTFILE defaultfile_lex.cc

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
