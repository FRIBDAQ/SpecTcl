<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
                      "file:///usr/share/xml/docbook/schema/dtd/4.3/docbookx.dtd"
>
<book>
   <bookinfo>
      <title>The SpecTcl Radware I/O plugin</title>
      <author><firstname>Ron</firstname><surname>Fox</surname></author>
      <revhistory>
          <revision>
	     <revnumber>1.0</revnumber>
	     <date>February 5, 2008</date>
	     <authorinitials>RF</authorinitials>
	     <revremark>Original Release</revremark>
	  </revision>
      </revhistory>
   </bookinfo>

<chapter>
    <title>Introduction</title>
    <para>
        Radware is a popular gamma ray spectrum analysis tool written by
        David Radford of the Physics Division of Oak Ridge National Laboratory.
        The home page for the package is at:
        <ulink url="http://radware.phy.ornl.gov">http://radware.phy.ornl.gov</ulink>.
        The <application>radwareio</application> plugin adds the capability
        to export SpecTcl 1-d spectra to radware in <firstterm>spe</firstterm> format.
    </para>
    <para>
        The radware I/O functions needed to do this are included in this
        package by permission from Dr. Radford.  Therefore there are
        no external dependencies other than an installation of SpecTcl-3.2.
    </para>
    <para>
        The remainder of this document:
        <itemizedlist>
            <listitem>
                <para>
                    How to build and install the plugin.
                </para>
            </listitem>
            <listitem>
                <para>
                    How to use the plugin once it is installed.
                </para>
            </listitem>
        </itemizedlist>
    </para>
</chapter>
<chapter>
    <title>Installation</title>
    <para>
        To install the plugin you must decide where the plugin files will live.
        I recommend installing them into your SpecTcl-3.2 installation directory,
        however you may install plugins elsewhere in the filesystem if that
        suits your organizational needs better.
    </para>
    <para>
        The plugin is installed using the usual two step
        <command>configure</command>, <command>make install</command>
        operation.  The <command>configure</command> command accepts
        several options specific to the configuring the makefiles for the plugin:
        <variablelist>
            <varlistentry>
                <term><option>--prefix</option>=<filename>path</filename></term>
                <listitem>
                    <para>
                        The value of this switch is the top level installation
                        directory.  The plugin will be installed in the
                        <filename>TclLibs</filename> subdirectory of this
                        directory.
                    </para>
                    <para>
                        By default, the SpecTcl installation is assumed to be here
                        as well.  See, however the <option>--with-spectcl-home</option>
                        option.
                    </para>
                    <para>
                        The default value for this is
                        <filename>/usr/local</filename>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><option>--with-tcl-header-dir</option>=<filename>path</filename></term>
                <listitem>
                    <para>
                        The configuration script attempts to locate the Tcl
                        headers by searching a number of 'normal' locations
                        for
                        <filename>tcl.h</filename>.
                        If configure fails to find this header, or if you want
                        to use an installation of Tcl other than the one
                        that it does locate (e.g. because you have installed
                        <application>ActiveTcl</application>, you can specify
                        the value of this switch to be the directory in which
                        <filename>tcl.h</filename>
                        is.
                    </para>
                    <para>
                        Normally you will not have to set this.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><option>--with-spectcl-home</option>=<filename>path</filename></term>
                <listitem>
                    <para>
                        If the value for your <option>--prefix</option> option
                        is not where SpecTcl is installed, you must provide
                        the toplevel installation directory path as the
                        value to this switch.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </para>
    <example>
       <title>Installation at the NSCL for SpecTcl-3.2</title>
       <programlisting>
./configure --prefix=/usr/opt/spectcl/3.2
...
make install
...
        </programlisting>
     </example>
</chapter>
<chapter>
    <title>Using</title>
    <para>
        This chapter describes:
        <itemizedlist>
            <listitem>
                <para>
                    How to load the plugin into a running SpecTcl.
                </para>
            </listitem>
            <listitem>
                <para>
                    The commands that are added by the plugin.
                </para>
            </listitem>
        </itemizedlist>
    </para>
    <section>
        <title>Loading the plugin</title>
        <para>
            The Tcl <command>load</command> command is used to load plugins.
            This command requires the full path to the plugin.
            The plugin will have been installed in the <filename>TclLibs</filename>
            subdirectory of the plugin's installation directory.
            If the plugin was installed in the <application>SpecTcl</application>
            directory, the <varname>SpecTclHome</varname> Tcl variable
            can be used to load the plugin.
        </para>
        <example>
            <title>Loading the plugin</title>
            <programlisting>
<command>load /usr/opt/SpecTcl/plugins/TclLibs/libradwareio.so</command> <co id="abspath" />
<command>load $SpecTclHome/TclLibs/libradwareio.so</command>             <co id="relpath" />
            </programlisting>
        </example>
        <calloutlist>
            <callout arearefs="abspath">
                <para>
                    The plugin is loaded after being installed in
                    <filename>/usr/opt/SpecTcl/plugins</filename>.  Note again
                    the plugin file is installed in the <filename>TclLibs</filename>
                    directory, and is named; <filename>libradwareio.so</filename>.
                </para>
            </callout>
            <callout arearefs="relpath">
                <para>
                    Here the plugin was installed in the SpecTcl installation
                    directory so the path <filename>$SpecTclHome/TclLibs/libradwario.so</filename>
                    can be used.
                </para>
            </callout>
        </calloutlist>
    </section>
    
    <section>
        <title>Commands added by the plugin</title>
        <para>
            Successfully loading the plugin adds two commands:
            <variablelist>
                <varlistentry>
                    <term><command>rwwrite</command></term>
                    <listitem>
                        <para>Writes a spectrum in .spe form to file.
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><command>rwread</command></term>
                    <listitem>
                        <para>
                            Reads a spectrum in .spe form from file.
                        </para>
                    </listitem>
                </varlistentry>
            </variablelist>
            The remainder of this chapter provides reference pages for
            both of these commands.
        </para>
        <refentry id="rwwrite">
          <refmeta>
             <refentrytitle>rwwrite</refentrytitle>
             <manvolnum>1radwareio</manvolnum>
          </refmeta>
          <refnamediv>
             <refname>rwwrite</refname>
             <refpurpose>Write a spectrum to file in radware .spe format.</refpurpose>
          </refnamediv>
          
          <refsynopsisdiv>
            <cmdsynopsis>
        	<command>
<command>rwwrite</command> <replaceable>spectrum file</replaceable>
        	</command>
            </cmdsynopsis>
          </refsynopsisdiv>
          <refsect1>
             <title>DESCRIPTION</title>
             <para>
        	Write <replaceable>spectrum</replaceable> to the file
                <replaceable>file</replaceable>.  The spectrum
                is written in Radware .spe format.
             </para>
             <para>
                <replaceable>spectrum</replaceable> must be a 1-d spectrum.
                The spectrum name is used for the spectrum title in the
                .spe output file.  If the name is longer than 79 characters,
                it is truncate to 79 characters, as that's the maximum allowed
                name length for radware spectrum titles.
             </para>
          </refsect1>
          <refsect1>
             <title>EXAMPLES</title>
             <para>
                Write the spectrum gamma1 to the file gamma1.spe:
             </para>
             <example>
                <title>Write a spectrum to .spe formatted file</title>
                <programlisting>
rwwrite gamma1 gamma1.spe
                </programlisting>
             </example>
          </refsect1>
           <refsect1>
                <title>BUGS and other ISSUES</title>
                <itemizedlist>
                    <listitem>
                        <para>
                            Some errors are output to
                            <filename>stderr</filename> which is the terminal
                            on which SpecTcl was started.  This is a property
                            of the radware I/O library and is not expected to
                            be fixed.  It does mean that the command is not
                            always able to return a meaningful error message
                            on failure, although it will always return an
                            error condition on failure.
                        </para>
                    </listitem>
                </itemizedlist>
           </refsect1>
           <refsect1>
                <title>SEE ALSO</title>
                <para>
                    <link linkend="rwread">rwread(1radwareio)</link>
                </para>
           </refsect1>
        </refentry>
        <refentry id="rwread">
          <refmeta>
             <refentrytitle>rwread</refentrytitle>
             <manvolnum>1radwareio</manvolnum>
          </refmeta>
          <refnamediv>
             <refname>rwread</refname>
             <refpurpose>Read radware .spe formatted file</refpurpose>
          </refnamediv>
          
          <refsynopsisdiv>
            <cmdsynopsis>
        	<command>
rwread <optional>?-maxchans n?</optional> <replaceable>filename</replaceable>
        	</command>
            </cmdsynopsis>
          </refsynopsisdiv>
          <refsect1>
             <title>DESCRIPTION</title>
             <para>
        	Reads the spectrum in the .spe file <replaceable>filename</replaceable>
                into a SpecTcl spectrum.  The name of the spectrum is taken
                from the .spe file's title field.  The spectrum will always be
                a snapshot spectrum as .spe files do not have sufficient information
                to allow SpecTcl to hook up parameters to the spectrum.
             </para>
             <para>
                The optional <option>-maxchans</option> switch allows you to
                specify the maximum number of channels of data that may be in
                the spectrum.   This defaults to <literal>8192</literal>.
                
             </para>
             <para>
                The Radware spectrum I/O functions don't allow the program
                to inquire the length of a spectrum.  Therefore, the
                <option>-maxchans</option> value is used to allocate
                the array into which the spectrum is initially read in
                prior to converting the data to a SpecTcl Spectrum object.
                if <option>-maxchans</option> is too small, radware will
                not read the last set of channels from the spectrum.
             </para>
          </refsect1>
          <refsect1>
             <title>EXAMPLES</title>
             <example>
                <title>Reading in a radware .spe spectrum</title>
                <programlisting>
<command>rwread -maxchans 32768 george.spe</command>
                </programlisting>
             </example>
             
          </refsect1>
          <refsect1>
            <title>BUGS and ISSUES</title>
            <itemizedlist>
                <listitem>
                    <para>
                        Radware's I/O library can emit error messages to
                        <varname>stdout</varname>. For SpecTcl this is the
                        terminal (window) on which SpecTcl was started.
                        While the command will always know when it failed,
                        this behavior means that it is not possible to report
                        errors detected by the radware I/O library as the
                        result of the command.
                    </para>
                </listitem>
            </itemizedlist>
          </refsect1>
          <refsect1>
            <title>SEE ALSO</title>
            <para>
                <link linkend="rwwrite">rwwrite(1radwareio)</link>
            </para>
          </refsect1>
        </refentry>
        
    </section>
</chapter>
   
</book>