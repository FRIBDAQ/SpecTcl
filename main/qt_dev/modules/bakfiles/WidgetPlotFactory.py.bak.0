import io
import sys, os
sys.path.append(os.getcwd())

import numpy as np                
import scipy as sp
import matplotlib
matplotlib.use("Qt5Agg")
from matplotlib.figure import Figure
import matplotlib.pyplot as plt
import random

from PyQt5 import QtCore
from PyQt5.QtWidgets import *
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT as NavigationToolbar

class WidgetPlot(QWidget):
        def __init__(self, *args, **kwargs):
                QWidget.__init__(self, *args, **kwargs)
                self.setLayout(QVBoxLayout())
                #self.canvas = PlotCanvas(self, width=10, height=8)
                self.figure = plt.figure()
                self.canvas = FigureCanvas(self.figure)
                self.toolbar = NavigationToolbar(self.canvas, self)
                self.layout().addWidget(self.toolbar)
                self.layout().addWidget(self.canvas)

        def get_figure(self):
                return self.figure

        def get_canvas(self):
                return self.canvas
                
class PlotCanvas(FigureCanvas):
        def __init__(self, parent=None, width=10, height=8, dpi=100):
                fig = Figure(figsize=(width, height), dpi=dpi)
                FigureCanvas.__init__(self, fig)
                self.setParent(parent)
                FigureCanvas.setSizePolicy(self, QSizePolicy.Expanding, QSizePolicy.Expanding)
                FigureCanvas.updateGeometry(self)
                #self.plot()
                
        def plot(self):
                data = [random.random() for i in range(250)]
                ax = self.figure.add_subplot(111)
                ax.plot(data, 'r-', linewidth = 0.5)
                ax.set_title('PyQt Matplotlib Example')
                self.draw()
