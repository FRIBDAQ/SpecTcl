<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
                      "file:///usr/share/xml/docbook/schema/dtd/4.3/docbookx.dtd"
>
<book>
   <bookinfo>
      <title>First of parameter list plugin</title>
      <author><firstname>Ron</firstname><surname>Fox</surname></author>
      <revhistory>
          <revision>
	     <revnumber>1.0</revnumber>
	     <date>May 21, 2008</date>
	     <authorinitials>RF</authorinitials>
	     <revremark>Original Release</revremark>
	  </revision>
      </revhistory>
   </bookinfo>
   
<chapter>
   <title>Introduction</title>
   <para>
      This document describes the
      <firstterm>firstof</firstterm> plugin.  This plugin provides a SpecTcl
      command that generates and adds additional event processors to the
      Spectcl event processing pipeline.
   </para>
   <para>
      The new event processors locate the first, or largest parameter in a list
      of parameters
      that has been assigned a value and produces two output parameters.
      The first output parameter is the value of the first, or largest defined parameter.
      The second output parameter is the index of the found parameter.
   </para>
   <para>
      One sample use of this plugin would be to create hit/position spectra
      from Si strip detectors.
   </para>
   <para>
      This document is organized in the following remaining chapters:
   </para>
   <variablelist>
      <varlistentry>
         <term>Installation</term>
         <listitem>
            <para>Describes how to install the plugin.</para>
         </listitem>
      </varlistentry>
      <varlistentry>
         <term>Usage</term>
         <listitem>
            <para>
               Describes how to use the plugin.
            </para>
         </listitem>
      </varlistentry>
   </variablelist>
   
</chapter>

<chapter>
    <title>Installation</title>
    <para>
        While the plugin can be installed anywhere, I recommend installing it
        in the SpecTcl installation directory.  This makes loading it easier.
        The plugin is installed by following the usual two step
        <command>configure</command> and <command>make install</command>
        procedure used by most Unix/Linux open source software.
    </para>
    <para>
        The <command>configure</command> script configures the Makefiles
        for build and installation.  It accepts the followign switches that
        are specific to the plugin:
    </para>
    <variablelist>
        <varlistentry>
            <term><option>--help</option></term>
            <listitem>
                <para>Prints out exhaustive help describing the options and
                    variables recognized by the <command>configure</command>
                    script.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><option>--prefix</option>=<replaceable>path</replaceable></term>
            <listitem>
                <para>
                    <replaceable>path</replaceable> is the top leve directory
                    for the installation tree for the plugin.  The plugin
                    itself is installed in the <filename>TclLibs</filename>
                    subdirectory of this tree and has the name
                    <filename>librootfilterformat.so</filename>
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><option>--with-tcl-header-dir</option>=<replaceable>path</replaceable></term>
            <listitem>
                <para>
                    The configure script searches for <filename>tcl.h</filename> in the
                    most likely places.  If it reports it is not able to find it,
                    you can tell configure where it actually lives by supplying the
                    <replaceable>path</replaceable> parameter to this option.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><option>--with-spectcl-home</option>=<replaceable>path</replaceable></term>
            <listitem>
                <para>
                    The plugin must link to the SpecTcl libraries.  By default,
                    these are assumed to be located in the same directory tree
                    as the one specified by the <option>--prefix</option> option.
                    If, however you choose to install the plugin elsewhere,
                    you must specify this option and <replaceable>path</replaceable>
                    to be the path to the top level directory of the SpecTcl installation.
                </para>
            </listitem>
        </varlistentry>
    </variablelist>
    <example>
        <title>Building at the NSCL</title>
        <programlisting>
./configure --prefix=/usr/opt/spectcl/3.2
...
make install
        </programlisting>
    </example>
</chapter>
<chapter>
   <title>Usage</title>
   <para>
   </para>
   <section>
         <title>Loading the plugin</title>
         <para>
           The Tcl <command>load</command> command loads plugin libraries.
           You must specify the path to the plugin library completely.  If
           the plugin has been installed in the SpecTcl installation, you can
           use the <varname>SpecTclHome</varname> variable to shorten the
           path.
         </para>
         <para>
            The sample below shows how to load the firstof plugin if it was
            installed in the NSCL SpecTcl directory tree:
         </para>
         <example>
            <title>Loading the plugin</title>
            <screen>
<computeroutput>% </computeroutput><command>load $SpecTclHome/TclLibs/libfirstof.so</command>
            </screen>
         </example>
   </section>
   <section>
      <title>The <command>firstof</command> command</title>
      <para>
         Loading the firstof filter adds a new command to SpecTcl:
         <command>firstof</command>.  This command is used to define two new
         parameters for a list of input parameters.  The command installs an
         event processor at the end of the SpecTcl analysis pipeline to compute
         these parameters.
      </para>
      <para>
         By convention, the new parameters are referred to as the
         <firstterm>value</firstterm>
         and
         <firstterm>firsthit</firstterm> parameters.
         The event processor iterates through the list of the input parameters
         in the order in which they are specified on the command line.
         When it locates the first parameter that has been assigned a value,
         it sets the value output parameter to the value of that parameter.
         It sets the firsthit parameter to the index into the list of the
         first defined parameter.
      </para>
      <para>
         The syntax of the <command>firstof</command> command is:
      </para>
      <example>
         <title>Syntax of <command>firstof</command></title>
         <programlisting>
<command>firstof</command> <replaceable>value firsthit input-list</replaceable></programlisting>
      </example>
      <variablelist>
         <varlistentry>
            <term><replaceable>value</replaceable></term>
            <listitem>
               <para>
                  Is the name of the value output parameter.  This parameter must
                  not yet be defined in SpecTcl.  The command errors out if
                  it is.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term><replaceable>firsthit</replaceable></term>
            <listitem>
               <para>
                  Is the name of the first hit output parameter.  This parameter
                  must not yet be defined in SpecTcl.  The command errors out
                  if it is.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term><replaceable>input-list</replaceable></term>
            <listitem>
               <para>
                  Is a properly formatted list of parameters that are already
                  defined in SpecTcl.  These will be the list of input
                  parameters from which  the output parameters will be computed.
               </para>
            </listitem>
         </varlistentry>
      </variablelist>
      <para>
         Let's look at a practical example.  Suppose our experiment includes
         a double sided silicon strip detector (dsssd).  The front side of the
         detector has 32 strips that are vertical and therefore define an x
         position.  The backside, 32 horizontal strips that define a y position.
         Suppose the raw data are unpacked so that the parameters:
         <parameter>dssd1.x.00</parameter> ... <parameter>dssd1.x.31</parameter>
         and <parameter>dssd1.y.00</parameter> ... <parameter>dssd1.y.31</parameter>
         are defined.
      </para>
      <para>
         The example below shows how to produce an X/Y 2-d position spectrum
         from these parameters using the
         <command>firstof</command> plugin.
      </para>
      <example>
         <title>Making a 2-d position spectrum for a dsssd detector</title>
         <programlisting>
load $SpecTclHome/TclLibs/libfirstof.so                <co id="load" />

for {set strip 0} {$strip &lt; 32} {incr strip} {
   set stripnum [format %02d $strip]
   lappend xstrips dsssd1.x.$stripnum                  <co id="genlists" />
   lappend ystrips dsssd1.y.$stripnum
}

firstof dsssd1.x.e  dsssd1.x.pos $xstrips              <co id="firstof" />
firstof dsssd1.y.e  dsssd1.y.pos $ystrips

spectrum dsssd1.xy  2 {dsssd1.x.pos dsssd1.y.pos} {{0 31 32} {0 31 32}} <co id="spectrum" />
sbind dsssd1.xy

         </programlisting>
      </example>
      <calloutlist>
         <callout arearefs="load">
            <para>
               Loads the firstof plugin.  This is only needed once during the
               SpecTcl run.  It is harmless to do it more than once.
            </para>
         </callout>
         <callout arearefs="genlists">
            <para>
               Creates a pair of lists of the dsssd strip parameters.
               The <command>format</command> is used to turn a number like
               <literal>1</literal> into <literal>01</literal>.
            </para>
         </callout>
         <callout arearefs="firstof">
            <para>
               These <command>firstof</command> commands define four new
               parameters.
               <parameter>dsssd1.x.e</parameter> will be the value of the first
               x parameter that has been defined for an event.
               <parameter>dsssd1.x.pos</parameter>
               will be the number of that strip.
            </para>
            <para>
               The <command>firstof</command> commands define the new parameters,
               making them known to SpecTcl.  Event processors are also defined
               to compute the four new processors (one event processor, two parameters
               per invocation of the <command>firstof</command> command).
            </para>
         </callout>
         <callout arearefs="spectrum">
            <para>
               Creates the 2-d position spectrum and binds it to the displayer
               so that you can view it.
            </para>
         </callout>
      </calloutlist>
      <para>
         Suppose we have an event where the following strips have been hit:
         dsssd1.x.05, dsssd1.x.07, dsssd1.y.03, dsssd1.y.30.  In this case,
         the example above will set dsssd1.x.pos to 5, and
         dsssd1.y.pos to 3.  Similarly,
         dsssd1.x.e will have the value of dsssd1.x.05 and
         dsssd1.y.e will have the value of dsssd1.y.03.
         The two dimensional position spectrum we defined will have
         channel (5,3) incremented.
      </para>
   </section>
   <section>
      <title>The <command>biggestof</command> command</title>
      <para>
         The
         <command>biggestof</command>
         command is also added, it has the same syntax as the
         <command>firstof</command>
         command but generates an event processor that returns the largest value
         and index of the largest value parameter in the list of parameter monitored.
      </para>
      <para>
         An example of this that is identical to that of the
         <command>firstof</command> example is:
      </para>
      <example>
         <title>Making a 2-d position spectrum for a dsssd detector using <command>biggestof</command></title>
         <programlisting>
load $SpecTclHome/TclLibs/libfirstof.so

for {set strip 0} {$strip &lt; 32} {incr strip} {
   set stripnum [format %02d $strip]
   lappend xstrips dsssd1.x.$stripnum  
   lappend ystrips dsssd1.y.$stripnum
}

biggestof dsssd1.x.e  dsssd1.x.pos $xstrips
biggestof dsssd1.y.e  dsssd1.y.pos $ystrips

spectrum dsssd1.xy  2 {dsssd1.x.pos dsssd1.y.pos} {{0 31 32} {0 31 32}} 
sbind dsssd1.xy

         </programlisting>
      </example>
   </section>
</chapter>

</book>